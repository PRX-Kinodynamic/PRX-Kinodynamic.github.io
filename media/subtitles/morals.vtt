WEBVTT

00:00:01.500 --> 00:00:03.000
We present

00:00:03.000 --> 00:00:10.320
MORALS: Analysis of High-Dimensional Robot Controllers via Topological Tools in
a Latent Space.

00:00:10.320 --> 00:00:15.500
This is a joint collaboration between the CS and Math departments at Rutgers University.

00:00:17.500 --> 00:00:24.640
Our objective is to identify the Regions of Attraction or RoAs of desired and undesirable

00:00:24.640 --> 00:00:31.000
attractors of high-dimensional robot controllers without access to analytical models and given

00:00:31.000 --> 00:00:35.560
only a limited dataset of executed trajectories.

00:00:35.560 --> 00:00:40.480
Existing tools can be applied to low-dimensional systems like a pendulum but cannot reliably

00:00:40.480 --> 00:00:46.160
estimate the RoAs for high-dimensional systems like a humanoid.

00:00:46.160 --> 00:00:52.720
Assume we are provided a dataset of trajectories of a tri-fingered robot hand pushing a cube

00:00:52.720 --> 00:00:54.640
to a desired pose.

00:00:54.640 --> 00:00:57.960
The controller is closed box.

00:00:57.960 --> 00:01:04.020
Estimating RoAs for such systems is critical for safe deployment of these controllers.

00:01:04.020 --> 00:01:12.960
This also allows us to compose multiple controllers with different RoAs into hybrid solutions.

00:01:12.960 --> 00:01:17.960
We will first recap our prior work on Morse graphs or MGs.

00:01:17.960 --> 00:01:23.960
Morse graphs explain the global dynamics of a control system, i.e., they identify all the

00:01:23.960 --> 00:01:29.440
attractors and their RoAs without access to an analytical model.

00:01:29.440 --> 00:01:34.460
In this illustrative example, we consider a one-dimensional dynamical system.

00:01:34.460 --> 00:01:40.160
This system has two attractors where it intersects with the y=x line.

00:01:40.160 --> 00:01:46.640
First we discretize the space and evaluate the dynamics locally at the resolution of

00:01:46.640 --> 00:01:51.960
the discretization.

00:01:51.960 --> 00:01:59.320
This lets us construct the combinatorial representation of the dynamics F.

00:01:59.320 --> 00:02:05.960
Collapsing all nodes that are part of strongly connected components in F into a single node

00:02:05.960 --> 00:02:10.740
gives rise to the Condensation Graph, CG(F).

00:02:10.740 --> 00:02:18.080
We then obtain the Morse graph MG(F) via identification of non-trivial strongly connected components

00:02:18.080 --> 00:02:20.080
of F.

00:02:20.080 --> 00:02:26.580
Finally, we can derive the RoAs from CG(F) for the leaf nodes of MG(F).

00:02:26.580 --> 00:02:32.800
In this example, the nodes 1 and 2 of the MG correspond to attractors and their corresponding

00:02:32.800 --> 00:02:40.580
RoAs can be identified in the condensation graph as {a, b} and {d, e} respectively.

00:02:40.580 --> 00:02:45.120
We show the Morse graphs framework applied to the phase space of an inverted pendulum

00:02:45.120 --> 00:02:49.240
using an LQR controller to stand upright.

00:02:49.240 --> 00:02:54.700
The Morse graph shown on the left recovers the central desired attractor 2 along with

00:02:54.700 --> 00:02:56.760
its corresponding RoA.

00:02:56.760 --> 00:03:03.760
It is able to do so only by evaluating the dynamics locally along a discretization.

00:03:03.760 --> 00:03:09.860
In addition, the Morse graph also recovers the undesirable attractors 0 and 4 as well

00:03:09.860 --> 00:03:12.680
as their corresponding RoAs.

00:03:12.680 --> 00:03:17.940
However, since the traditional Morse graphs framework relies on the discretization of

00:03:17.940 --> 00:03:24.960
the state space, it becomes infeasible to directly apply it to high dimensional robots.

00:03:24.960 --> 00:03:30.660
The proposed approach, MORALS, combines Morse graphs with unsupervised representation learning

00:03:30.660 --> 00:03:33.640
to study the RoAs for high dimensional robots.

00:03:33.640 --> 00:03:38.560
First, it collects execution trajectories of the controller.

00:03:38.560 --> 00:03:43.520
These trajectories can then be decomposed into current state and next state pairs that

00:03:43.520 --> 00:03:48.600
are then used to train an autoencoding neural network.

00:03:48.600 --> 00:03:53.940
Both the current and the next state are projected into a lower dimensional latent space by passing

00:03:53.940 --> 00:03:56.320
them through an encoder.

00:03:56.320 --> 00:04:01.360
The projected current state is then reconstructed back in the original high dimensional state

00:04:01.360 --> 00:04:03.560
space via a decoder.

00:04:03.560 --> 00:04:09.780
The L1 loss is a mean squared error between the true state and the reconstruction.

00:04:09.780 --> 00:04:15.480
To enforce the dynamics of the controller in this latent space, a latent dynamics network

00:04:15.480 --> 00:04:21.400
acts on the encoding of the current state to predict the next state's encoding.

00:04:21.400 --> 00:04:27.000
This is then fed back to the decoder where the L2 loss minimizes the mean squared error

00:04:27.000 --> 00:04:29.960
relative to the true next state.

00:04:29.960 --> 00:04:35.420
An additional loss term, L3, minimizes the mean squared error between the predicted encoding

00:04:35.420 --> 00:04:38.580
of the next state and its true encoding.

00:04:38.580 --> 00:04:43.680
The architecture is trained end-to-end to minimize a weighted sum of these three loss functions

00:04:43.680 --> 00:04:46.560
in an unsupervised manner.

00:04:46.560 --> 00:04:52.560
Finally, MORALS performs a discretization of the learned latent space and constructs the

00:04:52.560 --> 00:04:57.320
MG that corresponds to the learned latent dynamics.

00:04:57.320 --> 00:05:03.840
We also prove that any RoAs for the obtained MG are also RoAs for the bistable Morse graph

00:05:03.840 --> 00:05:10.360
R(MG), which decomposes the dynamics into a single separatrix and a desired and undesirable

00:05:10.360 --> 00:05:13.360
attractor.

00:05:13.360 --> 00:05:20.880
This plot showcases the application of MORALS to obtain the RoAs of a 67-dimensional humanoid

00:05:20.880 --> 00:05:23.600
attempting to stand up.

00:05:23.600 --> 00:05:29.360
The latent space is two dimensional and the obtained Morse graph has identified two attractors

00:05:29.360 --> 00:05:35.600
shown in dark colors and their corresponding RoAs shown in light colors.

00:05:35.600 --> 00:05:41.280
To label the discovered attractors, MORALS encodes all the final states in the training data.

00:05:41.280 --> 00:05:47.180
If the RoA of the considered attractor contains at least one successful encoded final state,

00:05:47.180 --> 00:05:49.920
it is labeled as a desired attractor.

00:05:49.920 --> 00:05:55.960
Thus, MORALS can identify whether a new initial state will succeed or fail by encoding it

00:05:55.960 --> 00:06:00.440
and querying which attractor's RoA it belongs to.

00:06:00.440 --> 00:06:06.200
In these examples, MORALS only sees the initial state and uses the MG to assign them to the

00:06:06.200 --> 00:06:09.880
RoA of the desired attractor.

00:06:09.880 --> 00:06:15.200
In these examples, MORALS only sees the initial state and uses the MG to assign them to the

00:06:15.200 --> 00:06:19.240
RoA of the undesired attractor.

00:06:19.240 --> 00:06:24.360
Despite reasonable accuracy, MORALS still suffers from some incorrect prediction due to learning

00:06:24.360 --> 00:06:26.200
error as shown here.

00:06:26.200 --> 00:06:30.960
To learn more, please visit our website and attend our presentation.

00:06:30.960 --> 00:06:31.320
Thank you!

